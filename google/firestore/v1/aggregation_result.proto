// Specification of a Firestore aggregation query result.

syntax = "proto3";

package google.firestore.v1;

import "google/firestore/v1/document.proto";

option csharp_namespace = "Google.Cloud.Firestore.V1";
option go_package = "google.golang.org/genproto/googleapis/firestore/v1;firestore";
option java_multiple_files = true;
option java_outer_classname = "AggregationResultProto";
option java_package = "com.google.firestore.v1";
option objc_class_prefix = "GCFS";
option php_namespace = "Google\\Cloud\\Firestore\\V1";
option ruby_package = "Google::Cloud::Firestore::V1";

// The result of a single bucket from a Firestore aggregation query.
//
// The keys of `aggregate_fields` are the same for all results in an aggregation
// query, unlike document queries which can have different fields present for
// each result.
message AggregationResult {
  // The result of the aggregation functions, ex: `COUNT(*) AS total_docs`.
  //
  // The key is the [alias][StructuredAggregationQuery.Aggregation.alias]
  // assigned to the aggregation function on input and the size of this map
  // equals the number of aggregation functions in the query.
  map<string, Value> aggregate_fields = 2;
}
